yt1s.io-Introduction_to_Docker_for_CTFs-01.wav	doccor is a very prominent container solusion its widely ued in software development ent ipoyment because essentially ukin crat hose system and easily runt anywhere that suports such a container you can somewhat immagan containers like a v m at dleast from the point of uover regular user but in reality its very much not a v m the differences a technical but i want to ignor that for now though if you no me of course oulook at te important differences between a v m nte containe to just no now tets first checkout a doko containers use for for c t f and wy they are ar some for i t security work in gennera at the real world c tf and two thousand eighteen de vases challenge flaglap  made a video about that  end ou can fintin elow that chalenge gave us a fall to ownot which turned out t be a dococompose yamo confict fiw thes confict il basically tiscribe the setup of a linuc macheen with a specific kid lub version nd we were able to simply use the comand doco compose up to run i locally  didnt have to compile anything i did nt have to install any dependencies for gidlup i didnt have to make sure nothing else and o feerce with it i simply just had to use doe compose up 
yt1s.io-Introduction_to_Docker_for_CTFs-02.wav	and then i had magically a local gittlup instance running ready for me to test wart 
yt1s.io-Introduction_to_Docker_for_CTFs-03.wav	this is awsom poci t f players because we can focuse on searching for the vornarability instead of dealing with the setups an also when you made an expert that works locally it should easily work on the axtural challenge server because the organisers likely use the same doco compose conflict to run te challenge 
yt1s.io-Introduction_to_Docker_for_CTFs-04.wav	this is obviously also assom for backpounti hunters looking for bucgs in git lap because they can quickly get a easy local set up to test with its just easy 
yt1s.io-Introduction_to_Docker_for_CTFs-05.wav	of the ball but besides running and hosting chowndrers with docker you can also use docker to set up your ctf play environment 
yt1s.io-Introduction_to_Docker_for_CTFs-06.wav	i played setafs with various different set ups in the past 
yt1s.io-Introduction_to_Docker_for_CTFs-07.wav	either directly on my macer lynox slaptop renting a lynox mistryn to sss ge into it setting up a lynox b m ar also using bakeran to manage b ms from the commantline easily 
yt1s.io-Introduction_to_Docker_for_CTFs-08.wav	however over the past one to two years i am using docome often 
yt1s.io-Introduction_to_Docker_for_CTFs-09.wav	basically i am using docker on my mac or on her rented lynoux machine to quickly set up to uls you py
yt1s.io-Introduction_to_Docker_for_CTFs-10.wav	asically used tocker like a linox server vegue ss age into you have a shevel and tools in stall so no graphic or use interface its used for a running commandline tools and execute scripts that you wriht during the c t f 
yt1s.io-Introduction_to_Docker_for_CTFs-11.wav	itso now that you got a quick introduction how it can be used lets set it up and do some examples set up is actually super easy but its different on windows linoxs o mec its important onno sen that docker users features by the linox scronal call names spaces to create something what we call a container so doker runs on linox which means when you use tocker on windows or mec in fact you are running a hiden linux v m in docker is then using that 
yt1s.io-Introduction_to_Docker_for_CTFs-12.wav	but the docker dest op tools for mac and windows make it easy and it mostly should trust work 
yt1s.io-Introduction_to_Docker_for_CTFs-13.wav	getting it on your own linix stepts of should also be easy or you rent a lynix server from example of digital ocean 
yt1s.io-Introduction_to_Docker_for_CTFs-14.wav	lets show for a moment with my preferral link here you should even get a hundred dollar credit i us digital oceans all te time because i am lazy to set up a b m ots because its a server you get a public i p and that can be very useful for se t s other stuff to a w u s asrar g clodworks creat two i just happen to u tateto ocean 
yt1s.io-Introduction_to_Docker_for_CTFs-15.wav	anyway to install docka just follow these steps here in the tocka help couply in pase those commands i do not need to show and explain how to do control seein control we you can figure that out 
yt1s.io-Introduction_to_Docker_for_CTFs-16.wav	but besides docker its olf you might want to instalt or cor compose two 
yt1s.io-Introduction_to_Docker_for_CTFs-17.wav	there are steps describig how to do that in the docker doces well to some
yt1s.io-Introduction_to_Docker_for_CTFs-18.wav	rice toka gives you commadline tos to start and configure individual containers to
yt1s.io-Introduction_to_Docker_for_CTFs-19.wav	a compose use tocker to give you some commands to launch multabout containers describing a whole set up with multiple systems 
yt1s.io-Introduction_to_Docker_for_CTFs-20.wav	so lets do an example when you go to my gitap you can find a pon doko example its yorve spasically as an example how a ponable city f chawnge could look like in a c t f  you are free to grab it and try to develop an exploit for it if you sorve it tell me about it 
yt1s.io-Introduction_to_Docker_for_CTFs-21.wav	so clon tat repository and have a look at the challenge fowler you can find ta dockor file thats ta regular docko confict file a test flag the system health check sea source cot as well as the compile challenge binary and wine
yt1s.io-Introduction_to_Docker_for_CTFs-22.wav	at thats a small tro to greata simple server that runs the ct f binary when somebody connects to the port firon atcat anyway with tolk of built dot you can built the docker container as the scraped ina docker file 
yt1s.io-Introduction_to_Docker_for_CTFs-23.wav	i also use minusty to gift this container an name 
yt1s.io-Introduction_to_Docker_for_CTFs-24.wav	called it like the name of the challenge lets have a quick look at the docker fil 
yt1s.io-Introduction_to_Docker_for_CTFs-25.wav	can see its based on an uben to verson nineteen dot one zero image so thats the base image that is used there is a whole doccor pository with all the images you can imagine ubento is one such repository 
yt1s.io-Introduction_to_Docker_for_CTFs-26.wav	then we specify the commands that should be run with in this containr we want upgetupted at a c t f se sat the work dear to that uses home directory copy the challenge pinary the test flage and wina ty server into the container so copy from the local system into the current working directory of the container trainformations of the homefolder switch to the c t f use in an executy command winuty to start the server on poured thousand twenty four en ter server should execute the binery an when you type the built command you can exactly see that happened 
yt1s.io-Introduction_to_Docker_for_CTFs-27.wav	and this now built a docker image and image of a container we could start any time 
yt1s.io-Introduction_to_Docker_for_CTFs-28.wav	with tocker images you can see all the images you are flocally available and heres hours 
yt1s.io-Introduction_to_Docker_for_CTFs-29.wav	now we can run that image with tocker run i am using here minusty to run it in de tached mode so the containa simply runs in ta background i use minus p to map a pord from with in this container to a port on my host machine very important if you want to run any kind of server in the container 
yt1s.io-Introduction_to_Docker_for_CTFs-30.wav	rmtautomatically remove the container when we accet the container n minus it ig s keep sday in open and allocate tt y now thar i think about this thats actually usele s case i gues  ust  habit that i do that its important when you execute ust matline tools and you want to use it like a hel y 
yt1s.io-Introduction_to_Docker_for_CTFs-31.wav	its running now with tockep as you can see the container running here it shows the commatwe executed winut tea as well as the port we map from inside the container to our host machine an now we can simply use netkat on our host to connect to local host on pfor thousand twenty four because we map the port from inside the container to a our machine 
yt1s.io-Introduction_to_Docker_for_CTFs-32.wav	and now you have the change running locally for testing and you could develop your exploit for it al some easy set up enteployment 
yt1s.io-Introduction_to_Docker_for_CTFs-33.wav	on the other side now lets use dokar as a c t f player environment 
yt1s.io-Introduction_to_Docker_for_CTFs-34.wav	i have also linked you an example of shity docker file i am using its not tought out its not meant to be the most awsom environment for c t f it just me using it and somethimes adding you tose to it i actually encourage you to start your own file and add whatever yu need when you needet but few free to trus use e to 
yt1s.io-Introduction_to_Docker_for_CTFs-35.wav	this one we also put into a follor important image from it i call it c t f and tagget with ubun two nineteen dot one zero thats just the name i give it because thats what its based on 
yt1s.io-Introduction_to_Docker_for_CTFs-36.wav	d now you can see i am just installing here various kinds of two els that you my neet 
yt1s.io-Introduction_to_Docker_for_CTFs-37.wav	ikink thick quite a while in this case but eventually you can stort this image with tocker run 
yt1s.io-Introduction_to_Docker_for_CTFs-38.wav	i am doing this again de teched remove the containa wen done but very importans minus v its mounting volumes so storage of photos from our host system into the container you can see that i am using the shell variable p u d which is the current working directory which means my challenge falter here will be accessible inside the container in slash p u d you see by that isu for soon then we are adding the p trice capability as well as this abling secom both he important lynox features to restrict processes so we basically jis abe security features but we need that if weu want to use d d b for d bacging programs 
yt1s.io-Introduction_to_Docker_for_CTFs-39.wav	p trice is a sus called in lynux to dback another process so g d b needs that and sek compot prevent g d b from this abling ars al ar during dbacging which is also baruseform so you are just ablig some security settings but i mean in this context it doesnt matter who cares 
yt1s.io-Introduction_to_Docker_for_CTFs-40.wav	running now so we talk up heras we can see this container running here and now 
yt1s.io-Introduction_to_Docker_for_CTFs-41.wav	megi we can use tocker exet to execute a process with in this container and we want to execute pin pash because that gives us a shall 
yt1s.io-Introduction_to_Docker_for_CTFs-42.wav	and this is the container ide but we want to run this in 
yt1s.io-Introduction_to_Docker_for_CTFs-43.wav	and now you can see her the minus i t which is actually important now because now you want to have this interactive keyword import thal 
yt1s.io-Introduction_to_Docker_for_CTFs-44.wav	looks and feels like you just asses edged into a server 
yt1s.io-Introduction_to_Docker_for_CTFs-45.wav	but obviously you haven't you are just noware running pin bash in that container 
yt1s.io-Introduction_to_Docker_for_CTFs-46.wav	way when you go to slash p w tm you can now see the fals from the challenge folther 
yt1s.io-Introduction_to_Docker_for_CTFs-47.wav	i will call this containr now the city f container an the previous container we started with a challenge i wil call challenge container and both of them run on my host system trust over there s no confusion 
yt1s.io-Introduction_to_Docker_for_CTFs-48.wav	remember that on the chalnge container wo expose the port thousand twenty four to our host system which means when we get the i p of our host system in this casis on mylocal network one nitwo one sixty eight one one two one to nine we can use netcat from with in our c t f container to connect to that port two so now we can run or develop our exploit with in th city f container on
yt1s.io-Introduction_to_Docker_for_CTFs-49.wav	linuc sat up this might not make much sense but on a mex set up this is an easy way for me to get a linox environment to run stuff 
yt1s.io-Introduction_to_Docker_for_CTFs-50.wav	so now i could create a pithemer script in te challenge foller and used for example pont tuels the aresome pithon module to connect to the challenge server and rea te response 
yt1s.io-Introduction_to_Docker_for_CTFs-51.wav	and then i can execute it with in my container opening connection an there's ta response 
yt1s.io-Introduction_to_Docker_for_CTFs-52.wav	i think this really ausom because i did nt have to install a fiddle wit pontos dependencies of set ups at all because everything was nicely set up already in thei container 
yt1s.io-Introduction_to_Docker_for_CTFs-53.wav	because this is now linox i also have no issues to run the binary as a process in the city of container to even use t d ba so lets diva quickly the spinary because it ask for password 
yt1s.io-Introduction_to_Docker_for_CTFs-54.wav	this is the basic example f challenge to password is also in the source amjust showing of the process bit 
yt1s.io-Introduction_to_Docker_for_CTFs-55.wav	wy heres a string compare and so that seems to be the secret passwor going back to my host machine continue developing the expertscript adding the sent line to sent the password and also change the code from the remote target tough a local process target so
yt1s.io-Introduction_to_Docker_for_CTFs-56.wav	we develope that code on the host machine and our i d e and can now go to a c t f container shall and executed now
yt1s.io-Introduction_to_Docker_for_CTFs-57.wav	stead of connecting to the remoteevun alocally a process a mewatever thi not a pipen poinootore but you get the point its convenient next video wil be about hotococontaines actualy work if you want to have a small sneak peak rewarses video and replace every time when i say the word container with the ord namespae 
